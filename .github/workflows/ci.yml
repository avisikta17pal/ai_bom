name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_bom
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Lint
        run: |
          pip install ruff black isort
          ruff backend
          black --check backend
          isort --check-only backend
      - name: Run backend tests
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/ai_bom
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: testkey
          PYTHONPATH: backend
          TESTING: "1"
        run: |
          cd backend
          pytest -q

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        run: npm ci || npm install
      - name: Lint and Test
        run: |
          npm run lint --if-present
          npm test --if-present

